name: Auto-Merge Dependabot PRs

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
  schedule:
    # Run every night at 2 AM UTC to merge any pending dependabot PRs
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  auto-merge-dependabot:
    name: Auto-merge dependabot PRs
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Install ImageMagick
      run: |
        sudo apt-get update
        sudo apt-get install -y imagemagick

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Run linting
      run: npm run lint

    - name: Generate coverage report
      run: npm run cov

    - name: Check if PR is from dependabot
      id: check-dependabot
      run: |
        if [[ "${{ github.actor }}" == "dependabot[bot]" ]]; then
          echo "is_dependabot=true" >> $GITHUB_OUTPUT
        else
          echo "is_dependabot=false" >> $GITHUB_OUTPUT
        fi

    - name: Auto-merge dependabot PR
      if: steps.check-dependabot.outputs.is_dependabot == 'true'
      uses: pascalgn/automerge-action@v0.16.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        MERGE_LABELS: "dependencies,automated"
        MERGE_METHOD: "squash"
        MERGE_COMMIT_MESSAGE: "pull-request-title-and-description"
        MERGE_FORKS: "false"
        MERGE_DELETE_BRANCH: "true"
        UPDATE_LABELS: "dependencies,automated"
        UPDATE_METHOD: "rebase"

    - name: Find and merge dependabot PRs (scheduled run)
      if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { data: pullRequests } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            head: 'dependabot'
          });

          console.log(`Found ${pullRequests.length} dependabot PRs`);

          for (const pr of pullRequests) {
            if (pr.user.login === 'dependabot[bot]') {
              console.log(`Processing PR #${pr.number}: ${pr.title}`);
              
              // Check if all status checks have passed
              const { data: checks } = await github.rest.checks.listForRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: pr.head.sha
              });

              const allChecksPassed = checks.check_runs.every(check => 
                check.status === 'completed' && check.conclusion === 'success'
              );

              if (allChecksPassed) {
                console.log(`All checks passed for PR #${pr.number}, merging...`);
                
                try {
                  await github.rest.pulls.merge({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    pull_number: pr.number,
                    merge_method: 'squash'
                  });
                  
                  console.log(`Successfully merged PR #${pr.number}`);
                } catch (error) {
                  console.error(`Failed to merge PR #${pr.number}:`, error.message);
                }
              } else {
                console.log(`Not all checks passed for PR #${pr.number}, skipping`);
              }
            }
          }
